<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!--
		NAMED RESOURCES
	-->

	<!-- Validator style for all framework elements -->
	<Style x:Key="ValidatorStyle" TargetType="FrameworkElement">
		<Setter Property="Validation.ErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<Border BorderBrush="Red" BorderThickness="1">
						<AdornedElementPlaceholder/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="true">
				<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Base style for all framework elements -->
	<Style x:Key="BaseStyle" TargetType="FrameworkElement" BasedOn="{StaticResource ValidatorStyle}">
		<Setter Property="Margin" Value="3"/>
	</Style>

	<!-- Style for Windows -->
	<Style x:Key="Window" TargetType="Window">
		<Setter Property="SizeToContent" Value="WidthAndHeight"/>
		<Setter Property="ResizeMode" Value="NoResize"/>
	</Style>

	<!-- Style for Windows opened as dialogs -->
	<Style x:Key="DialogWindow" BasedOn="{StaticResource Window}" TargetType="Window">
		<Setter Property="ShowInTaskbar" Value="False"/>
	</Style>
	
	<!-- Root element style -->
	<Style x:Key="RootElementStyle" TargetType="FrameworkElement">
		<Setter Property="Margin" Value="6"/>
	</Style>

	<!-- Style for all framework elements wishing a indented style -->
	<Style x:Key="IndentedBaseStyle" TargetType="FrameworkElement" BasedOn="{StaticResource ValidatorStyle}">
		<Setter Property="Control.Margin" Value="15,3,3,3"/>
	</Style>


	<!--
		GENERIC RESOURCES
	-->

	<!-- Generic style for all buttons -->
	<Style x:Key="ButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseStyle}">
		<Setter Property="MinWidth" Value="75"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style TargetType="Button" BasedOn="{StaticResource ButtonStyle}"/>

	<!-- Generic style for all group boxes -->
	<Style x:Key="GroupBoxStyle" TargetType="GroupBox" BasedOn="{StaticResource BaseStyle}"/>
	<Style TargetType="GroupBox" BasedOn="{StaticResource GroupBoxStyle}"/>

	<!-- Generic style for all items controls -->
	<Style x:Key="ItemsControlStyle" TargetType="ItemsControl" BasedOn="{StaticResource BaseStyle}"/>
	<Style TargetType="ItemsControl" BasedOn="{StaticResource ItemsControlStyle}"/>

	<!-- Generic style for all list boxes -->
	<Style x:Key="ListBoxStyle" TargetType="ListBox" BasedOn="{StaticResource BaseStyle}"/>
	<Style TargetType="ListBox" BasedOn="{StaticResource ListBoxStyle}"/>
	
	<!-- Generic style for all password boxes -->
	<Style x:Key="PasswordBoxStyle" TargetType="PasswordBox" BasedOn="{StaticResource BaseStyle}"/>
	<Style TargetType="PasswordBox" BasedOn="{StaticResource PasswordBoxStyle}"/>

	<!-- Generic style for all progress bars -->
	<Style x:Key="ProgressBarStyle" TargetType="ProgressBar" BasedOn="{StaticResource BaseStyle}">
		<Setter Property="Height" Value="20"/>
	</Style>
	<Style TargetType="ProgressBar" BasedOn="{StaticResource ProgressBarStyle}"/>

	<!-- Generic style for all text blocks -->
	<Style x:Key="TextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseStyle}">
		<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}"/>

	<!-- Generic style for all text boxes -->
	<Style x:Key="TextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource BaseStyle}">
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
	</Style>
	<Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}"/>
</ResourceDictionary>